#ifndef MDTFIT_H
#define MDTFIT_H
#include <vector>
#include <TF1.h>
#include <TGraph.h>
#include <TCanvas.h>

/* Data presented here was collected using an online tool for 
extracting data from graphs called WebPlotDigitizer 
(https://automeris.io/WebPlotDigitizer/) */

std::vector<double> data_time = {
    7.044078391796887,  21.74214106596304,  30.74170071798713,
    40.49400032768372,  53.997241843622504, 69.00126718478259,
    84.75654623564037,  101.26210606736873, 117.01776248836416,
    132.7735613226576,  149.2787325719206,  165.7845280298812,
    181.53965261837232, 197.29499844115253, 213.80022692349183,
    229.55449853832846, 245.30930549998106, 261.8145113903165,
    276.81788621564573, 293.3228511246073,  309.0766344174655,
    320.32935723379836, 330.5004212636664,  342.83571796348036,
    357.08842640055246, 367.5906216811289,  377.34355806458194,
    390.84751424183736, 405.851615544194,   416.35294119997224,
    426.52404818253893, 438.8595109661208,  453.8628952745134,
    470.36775391738314, 483.599248762366};
std::vector<double> data_spatial = {
    0.4494607841806797, 1.1399417788540358, 1.5308930749297165,
    1.8360549139143458, 2.256137982239064,  2.7048364583562794,
    3.1311042285445403, 3.5764172487125165, 3.9865977299376105,
    4.390707132267959,  4.852585422933705,  5.287853696822243,
    5.720706197703629,  6.144127480842533,  6.60356592546597,
    7.072780693241041,  7.519173626251959,  7.9795751679973606,
    8.456005133984918,  8.926679711697929,  9.41671164541292,
    9.765862062472412,  9.998827190929992,  10.42515231078044,
    10.898975469681513, 11.239599797548955, 11.517615971295331,
    11.907233027694982, 12.352693277999322, 12.730389711009597,
    12.961523765926655, 13.380768734753747, 13.85679443775184,
    14.331999138964457, 14.699000994318455};


class MDTFit{
public:
double * fit_data(){
  /* Fit assuming a linear model */
  TGraph *g = new TGraph();
  TCanvas *c2 = new TCanvas("Fit", "r-t relation", 200, 10, 600, 480);
  TF1 *f1 = new TF1("f", "[0]*x + [1]", 0, 15);
  for (int i = 0; i < (int)data_spatial.size(); i++){
    g->SetPoint(i, data_time[i], data_spatial[i]);
  }
  g->Fit(f1);
  g->SetTitle("r-t relation;time[ns];distance (r)[mm]");
  c2->cd();
  g->Draw("AP");
  g->SetMarkerStyle(22);
  double *params = f1->GetParameters();
  return params;
}
};

#endif
